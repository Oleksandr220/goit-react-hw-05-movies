{"version":3,"sources":["components/Navigation/Navigation.module.scss","components/Container/Container.module.css","components/Container/Container.jsx","components/Navigation/Navigation.jsx","components/AppBar/AppBar.jsx","services/moviesshelf-api.js","components/HomePage/HomePage.jsx","views/Cast.jsx","views/Reviews.jsx","views/MovieDetails.jsx","components/MoviesPage/MoviesPages.jsx","views/MoviesPageView.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Navigation","exact","to","link","activeClassName","activeLink","Appbar","header","BASE_URL","API_key","HomePage","location","useLocation","useState","movies","setMovies","useEffect","axios","get","then","response","fetchedMovies","data","results","map","movie","pathname","id","state","from","original_title","Cast","cast","setCast","movieId","useParams","profile_path","name","character","src","alt","Reviews","review","setReview","length","author","content","MovieDetails","history","useHistory","useRouteMatch","url","path","setMovie","myMovie","img","poster_path","title","score","vote_average","overview","genres","type","onClick","push","genre","join","fallback","MoviesPage","onSearch","search","setSearch","reset","onSubmit","event","preventDefault","value","onChange","currentTarget","placeholder","MoviesPageView","query","movieName","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a8960cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2BM9A\",\"activeLink\":\"Navigation_activeLink__2BSDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.scss';\n\nconst Navigation = () => (\n  <nav>\n    <NavLink\n      exact\n      to=\"/\"\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Home\n    </NavLink>\n\n    <NavLink\n      to=\"/movies\"\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Movies\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import Navigation from '../Navigation/Navigation';\nimport styles from './Appbar.module.scss';\n\nexport default function Appbar() {\n  return (\n    <header className={styles.header}>\n      <Navigation />\n    </header>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst API_key = 'b5ba239bc5da81cfffad558060f470c9';\n\nconst fetchMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_key}`);\n};\n\nconst getMovieDetails = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_key}&language=en-US`);\n};\n\nconst getMovieCredits = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_key}&language=en-US`,\n  );\n};\n\nconst getMovieReviews = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_key}&language=en-US`,\n  );\n};\n\nconst getSearchMovies = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_key}&language=en-US&query=${query}&page=1&include_adult=false`,\n  );\n};\n\nexport {\n  fetchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getSearchMovies,\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchMovies } from '../../services/moviesshelf-api';\n\nimport './HomePage.scss';\n\nexport default function HomePage() {\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    fetchMovies().then(response => {\n      const fetchedMovies = response.data.results.map(movie => movie);\n      setMovies(fetchedMovies);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {movies && (\n        <ul className=\"trend__movies-list\">\n          {movies.map(movie => (\n            <li key={movie.id} className=\"trend__movies-item\">\n              <Link\n                to={{\n                  pathname: `/movies/${movie.id}}`,\n                  state: { from: location },\n                }}\n                className=\"trend__movies-link\"\n              >\n                {movie.original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nimport { getMovieCredits } from '../services/moviesshelf-api';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(response => setCast(response.data.cast));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.map(({ profile_path, name, character }) => (\n        <li key={name}>\n          <img\n            src={\n              profile_path !== null\n                ? 'https://image.tmdb.org/t/p/w200' + profile_path\n                : '../image/logo192.png'\n            }\n            alt={name}\n          />\n          <p>{name}</p>\n          <p>\n            <span>Character:</span>\n            {character}\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nimport { getMovieReviews } from '../services/moviesshelf-api';\n\nexport default function Reviews() {\n  const [review, setReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(response => setReview(response.data.results));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {review.length > 0 ? (\n        review.map(({ author, content }) => (\n          <li key={author}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <li>\n          <p>We don't have any reviews for this movie.</p>\n        </li>\n      )}\n    </ul>\n  );\n}\n","import { useState, useEffect, Suspense } from 'react';\nimport {\n  NavLink,\n  Switch,\n  Route,\n  useParams,\n  useRouteMatch,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport { getMovieDetails } from '../services/moviesshelf-api';\n\nimport './MovieDetailsPage.scss';\n\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nexport default function MovieDetails() {\n  const history = useHistory();\n  const location = useLocation();\n  const { url, path } = useRouteMatch();\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(response => {\n      const myMovie = {\n        img: response.data.poster_path,\n        name: response.data.title ?? response.data.name,\n        score: response.data.vote_average,\n        overview: response.data.overview,\n        genres: response.data.genres,\n      };\n      return setMovie(myMovie);\n    });\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from);\n  };\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button type=\"button\" className=\"go-back-button\" onClick={onGoBack}>\n            &#8678; Go Back\n          </button>\n          <div className=\"movie-container\">\n            <div className=\"movie-image-container\">\n              <img\n                src={\n                  movie.img !== null\n                    ? 'https://image.tmdb.org/t/p/w400' + movie.img\n                    : '../image/logo512.png'\n                }\n                alt={movie.name}\n              />\n            </div>\n            <div>\n              <h2 className=\"movie-name\">{movie.name}</h2>\n              <p>User Score: {movie.score}</p>\n              <h3>Overview:</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres:</h3>\n              <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n            </div>\n          </div>\n\n          <div className=\"information-container\">\n            <h3 className=\"information-title\">Additional information</h3>\n\n            <nav>\n              <NavLink\n                to={{\n                  pathname: `${url}/cast`,\n                  state: { from: location?.state?.from },\n                }}\n                className=\"information-link\"\n              >\n                Cast\n              </NavLink>\n\n              <NavLink\n                to={{\n                  pathname: `${url}/reviews`,\n                  state: { from: location?.state?.from },\n                }}\n                className=\"information-link\"\n              >\n                Reviews\n              </NavLink>\n            </nav>\n          </div>\n          <Suspense fallback={<h3>Loading</h3>}>\n            <Switch>\n              <Route path={`${path}/cast`} exact>\n                <Cast />\n              </Route>\n\n              <Route path={`${path}/reviews`} exact>\n                <Reviews />\n              </Route>\n            </Switch>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesPage.css';\n\nexport default function MoviesPage({ onSearch }) {\n  const [search, setSearch] = useState('');\n\n  const handleChange = event => {\n    setSearch(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Проп который передается форме для вызова при сабмите\n    onSearch(search);\n    reset();\n  };\n\n  const reset = () => {\n    setSearch('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={search}\n        onChange={handleChange}\n        placeholder=\"add movie\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nMoviesPage.propTypes = {\n  onSearch: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport MoviesPage from '../components/MoviesPage/MoviesPages';\nimport { getSearchMovies } from '../services/moviesshelf-api';\n\nexport default function MoviesPageView() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    if (search === '') {\n      return;\n    }\n    getSearchMovies(search).then(response => {\n      const fetchedMovies = response.data.results.map(movie => {\n        return {\n          movieId: movie.id,\n          movieName: movie.title ?? movie.name,\n        };\n      });\n\n      setMovies(prevState => [...prevState, ...fetchedMovies]);\n    });\n  }, [search]);\n\n  const onSearchHandle = query => {\n    setSearch(query);\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <MoviesPage onSearch={onSearchHandle} />\n      {movies &&\n        movies.map(({ movieId, movieName }) => (\n          <li key={movieId}>\n            <Link\n              to={{\n                pathname: `/movies/${movieId}`,\n                state: { from: location },\n              }}\n            >\n              {movieName}\n            </Link>\n          </li>\n        ))}\n    </>\n  );\n}\n","import { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Container from './components/Container/Container';\nimport Appbar from './components/AppBar/AppBar';\nimport HomePage from './components/HomePage/HomePage';\nimport MovieDetails from './views/MovieDetails';\nimport MoviesPageView from './views/MoviesPageView';\n\nfunction App() {\n  return (\n    <Container>\n      <Appbar />\n      <Suspense fallback={<h3>Loading</h3>}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n\n          <Route path=\"/movies\" exact>\n            <MoviesPageView />\n          </Route>\n\n          <Route path=\"/movies/:movieId\">\n            <MovieDetails />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}